{"version":3,"sources":["components/ListItem/ListItem.module.css","components/InputForm/transitions/fade.module.css","components/Button/Btn.module.css","components/Alert/alert.module.css","components/Alert/transitions/alert.module.css","components/List/list.module.css","components/List/transitions/pop.module.css","components/List/transitions/search.module.css","components/InputForm/inputForm.module.css","components/InputForm/InputForm.js","components/Button/BtnFormSubmit.js","components/Alert/Alert.js","components/Phonebook.js","components/ListItem/ListItem.js","components/InputForm/InputSearch.js","components/List/List.js","components/redux/contactActions.js","App.js","components/redux/contactReducer.js","components/redux/store.js","index.js"],"names":["module","exports","InputForm","handleChange","contact","number","desForm","CSSTransition","in","timeout","classNames","fadeTransition","unmountOnExit","className","css","appear","title","name","placeholder","onChange","value","type","subtitle","BtnFormSubmit","styles","btn","Alert","alert","Phonebook","state","isOpen","isAlert","e","setState","target","checkContactExist","contactName","prevstate","getExist","props","contacts","filter","item","toLowerCase","includes","length","handleSubmit","preventDefault","newContact","id","uuid","addContact","this","onSubmit","form","alertTransition","Component","ListItem","deleteItem","sign","onClick","InputSearch","getFilterValue","List","inSearch","searchTransition","TransitionGroup","component","map","key","popTransition","createAction","App","filterList","JSON","parse","localStorage","getItem","connect","initialState","contactReducer","payload","persistConfig","storage","persistedReducer","persistReducer","store","configureStore","reducer","middleware","getDefaultMiddleware","serializableCheck","persistor","persistStore","ReactDOM","render","loading","document","getElementById"],"mappings":"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","file":"static/js/main.63b9b37c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"ListItem_btn__xsGV_\",\"sign\":\"ListItem_sign__2rtd9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"fade_enter__6P5Q_\",\"enterActive\":\"fade_enterActive__2TQpo\",\"exit\":\"fade_exit__1bWau\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Btn_btn__10Kex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"alert_alert__3VpKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__2dMOa\",\"enterActive\":\"alert_enterActive__RU9Zq\",\"exit\":\"alert_exit__1277_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"list_title__5dTbl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__6gsRa\",\"enterActive\":\"pop_enterActive__1_TC5\",\"exit\":\"pop_exit__1gsq1\",\"exitActive\":\"pop_exitActive__2NN_c\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"search_enter__2ssXx\",\"enterActive\":\"search_enterActive__3iFEo\",\"exit\":\"search_exit__1GxFU\",\"exitActive\":\"search_exitActive__2ugI6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"inputForm_form__18Nci\",\"title\":\"inputForm_title__1DD-D\",\"subtitle\":\"inputForm_subtitle__2G1o7\",\"appear\":\"inputForm_appear__3VJtt\"};","import React from \"react\";\nimport css from './inputForm.module.css'\nimport {CSSTransition} from \"react-transition-group\";\nimport fadeTransition from './transitions/fade.module.css'\n\n\n\nexport function InputForm({handleChange, contact, number,desForm}) {\n    return (\n        <div>\n            <CSSTransition in={desForm} timeout={2000} classNames={fadeTransition} unmountOnExit>\n                <h2 className={css.appear}>Phonebook</h2>\n            </CSSTransition>\n            <h3 className={css.title}>Name</h3>\n            <input\n\n                name='contact'\n                placeholder=\"Please put the name\"\n                onChange={handleChange}\n                value={contact}\n                type=\"text\"\n            />\n            <h3 className={css.subtitle}>Number</h3>\n            <input\n                name='number'\n                placeholder=\"Please put the number\"\n                onChange={handleChange}\n                value={number}\n                type=\"number\"\n            />\n        </div>\n    )\n}\n\n\n\n","import React from \"react\";\nimport styles from './Btn.module.css'\n\nexport function BtnFormSubmit() {\n    return <button className={styles.btn} type=\"submit\">Add to contact</button>;\n}\n","import React from \"react\";\nimport styles from './alert.module.css'\n\nexport const Alert =({contact})=>{\n    return <p className={styles.alert}>Name {contact} already exist. Turn on your imagination</p>;\n}","import React, {Component} from \"react\";\nimport {InputForm} from './InputForm/InputForm';\nimport {BtnFormSubmit} from './Button/BtnFormSubmit';\nimport {uuid} from 'uuidv4';\nimport styles from './InputForm/inputForm.module.css'\n// import List from \"./List/List\";\nimport {Alert} from \"./Alert/Alert\";\nimport alertTransition from './Alert/transitions/alert.module.css'\nimport {CSSTransition} from \"react-transition-group\";\nimport css from \"./InputForm/inputForm.module.css\";\n\n\n\nclass Phonebook extends Component {\n    state = {\n        contact: '',\n        number: '',\n        isOpen: false,\n        isAlert: false,\n\n\n    };\n\n    componentDidMount() {\n\n        this.setState({\n            isOpen: true,\n            isAlert: false\n        });\n\n    }\n\n\n    handleChange = (e) => {\n        this.setState({\n            [e.target.name]: e.target.value\n        })\n    };\n\n    checkContactExist = (contactName) => {\n        this.setState(prevstate=>({isAlert:!prevstate.isAlert}))\n    }\n\n    getExist=()=>{\n        const allContacts = this.props.contacts;\n        const include = allContacts.filter(item =>\n            item.contact.toLowerCase()\n                .includes(this.state.contact.toLowerCase())\n        );\n        return (include.length !== 0);\n    }\n\n\n    handleSubmit = (e) => {\n        e.preventDefault();\n        const contact = this.state.contact;\n        const number = this.state.number;\n        if (contact && number && !this.getExist()) {\n                const newContact = {id: uuid(), contact, number}\n                this.props.addContact(newContact);\n                this.setState({contact: '', number: ''});\n                // this.saveToLocalStorage(newContact);\n        }else{\n            this.checkContactExist()\n        }\n    }\n\n\n    // saveToLocalStorage(contact) {\n    //     if (!localStorage.getItem('contacts')) {\n    //         localStorage.setItem('contacts', JSON.stringify([]));\n    //     }\n    //\n    //     let localStorageArray = JSON.parse((localStorage.getItem('contacts')));\n    //     console.log(localStorageArray)\n    //\n    //     localStorageArray.push(contact);\n    //     contacts: localStorage.setItem('contacts', JSON.stringify(localStorageArray))\n    // }\n\n\n    render() {\n\n        return (\n            <>\n            <form onSubmit={this.handleSubmit} className={styles.form}>\n                <InputForm\n                    desForm={this.state.isOpen}\n                    contact={this.state.contact}\n                    number={this.state.number}\n                    handleChange={this.handleChange}\n                />\n                <BtnFormSubmit/>\n            </form>\n                <CSSTransition in={this.state.isAlert} timeout={2000} classNames={alertTransition} unmountOnExit>\n                    <Alert contact={this.state.contact} />\n                </CSSTransition>\n             </>\n\n        );\n    }\n\n}\n\nexport default Phonebook;\n\n","import React from 'react'\n\nimport styles from './ListItem.module.css'\n\n\nconst ListItem = ( {contact: {contact, number, id},deleteItem}) => {\n    return (\n        <li>\n            <p className={styles.sign}>{contact} : {number}</p>\n            <button className={styles.btn} id={id}\n                    onClick={()=>deleteItem(id)}\n            >delete</button>\n        </li>\n    )\n}\n\nexport default ListItem;","import React from \"react\";\nimport styles from './inputForm.module.css'\n\nfunction InputSearch({getFilterValue, filter}) {\n\n    return (\n        <>\n                <h3 className={styles.title}>Find contacts by name</h3>\n                <input\n                    name='filter'\n                    placeholder=\"search\"\n                    type=\"text\"\n                    onChange={(e)=>getFilterValue(e.target.value)}\n                    value={filter}\n                />\n        </>\n    )\n\n}\n\nexport default InputSearch","import React, {Component} from 'react';\nimport ListItem from \"../ListItem/ListItem\";\nimport InputSearch from \"../InputForm/InputSearch\";\nimport styles from './list.module.css';\nimport {TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport popTransition from \"./transitions/pop.module.css\";\nimport searchTransition from \"./transitions/search.module.css\"\n\nclass List extends Component {\n    state = {\n        inSearch: false\n    }\n\n    componentDidMount() {\n        this.setState({inSearch: true})\n    }\n\n\n    render() {\n        return (\n            <>\n                <>\n                    <h3 className={styles.title}>Contacts</h3>\n                    <CSSTransition in={this.props.contacts.length >= 2} timeout={250} classNames={searchTransition}\n                                   unmountOnExit>\n                        <InputSearch\n                            filter={this.props.filter}\n                            getFilterValue={this.props.getFilterValue}\n                        />\n                    </CSSTransition>\n                </>\n\n\n                <TransitionGroup component='ul'>\n                    {this.props.contacts.map(contact =>\n                        <CSSTransition timeout={200}\n                                       key={contact.id}\n                                       classNames={popTransition}\n                                       unmountOnExit>\n                            <ListItem key={contact.id}\n                                      deleteItem={this.props.deleteItem}\n                                      contact={contact}/>\n                        </CSSTransition>\n                    )}\n                </TransitionGroup>\n            </>\n\n        )\n    }\n\n\n}\n\nexport default List;\n\n","import {createAction} from '@reduxjs/toolkit';\n\n// export const Type = {\n//     FILTERLIST: 'FILTERLIST',\n//     GETFILTERVALUE: 'GETFILTERVALUE',\n//     ADDCONTACT: 'ADDCONTACT',\n//     DELETEITEM: 'DELETEITEM'\n// }\n\n\nexport const getFilterValue = createAction('GETFILTERVALUE');\n//\nexport const addContact = createAction('ADDCONTACT');\n//\nexport const deleteItem = createAction('DELETEITEM');\n\n//\n// export const getFilterValue = createAction('GETFILTERVALUE', value => ({\n//     payload: {\n//         value\n//     }\n// }));\n\n// export const addContact = createAction('ADDCONTACT', newContact => ({\n//     payload: {\n//         newContact\n//     }\n//     }));\n\n// export const getFilterValue = (value) => ({\n//     type: Type.GETFILTERVALUE,\n//     payload: value\n// })\n\n//\n// export const addContact = (newContact) => ({\n//     type: Type.ADDCONTACT,\n//     payload: newContact\n// })\n\n\n// export const deleteItem = (id) => ({\n//     type: Type.DELETEITEM,\n//     payload: id\n// })","import React, {Component} from 'react';\nimport Phonebook from \"./components/Phonebook\";\nimport List from \"./components/List/List\";\nimport {connect} from 'react-redux';\nimport {getFilterValue, addContact,deleteItem} from './components/redux/contactActions'\n\nclass App extends Component {\n\n    // state = {\n    //     contacts: [ ],\n    //     filter: '',\n    // }\n\n\n    componentDidMount() {\n\n        this.setState({\n            contacts: JSON.parse(localStorage.getItem('contacts')) || []\n        });\n    }\n\n\n    filterList = () => {\n            return this.props.contacts.filter(contact =>\n                contact.contact.toLowerCase().includes(this.props.filter)\n            );\n    }\n\n    // getFilterValue = (e) => {\n    //     this.setState({filter: e.target.value})\n    // }\n\n    // getContactInfo = (newContact) => {\n    //     this.props.addContact(newContact)\n    // }\n\n    // deleteItem = (e) => {\n    //     const id = e.target.id;\n    //     this.props.deleteItem(id);\n        // this.deleteFromLocalStorage(e)\n    // }\n\n    // deleteFromLocalStorage(e) {\n    //     const id = e.target.id;\n    //     const LocalStorageArray = (JSON.parse(localStorage.getItem('contacts')));\n    //     let FilterArray = LocalStorageArray.filter(item => item.id !== id);\n    //     contacts: localStorage.setItem('contacts', JSON.stringify(FilterArray))\n    //\n    // }\n\n    render() {\n        return (\n            <>\n                <Phonebook\n                    addContact={this.props.addContact}\n                    getFilterValue={this.props.getFilterValue}\n                    contacts={this.filterList()}\n\n                />\n                <List\n                    contacts={this.filterList()}\n                    // filterList={this.filterList()}\n                    filter={this.props.filter}\n                    getFilterValue={this.props.getFilterValue}\n                    deleteItem={this.props.deleteItem}\n                />\n            </>\n        );\n    }\n\n}\n\nconst mapStateProps = state => (\n    {\n        contacts: state.contacts,\n        filter: state.filter\n    })\n\n\n\n\nexport default connect(mapStateProps, {getFilterValue, addContact, deleteItem})(App);\n\n","// import {Type} from './contactActions';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {getFilterValue,addContact,deleteItem} from './contactActions'\n\n\n\nconst initialState = {\n    contacts: [],\n    filter: ''\n}\n\nconst contactReducer = (state = {...initialState},\n                        {type, payload}) => {\n    switch (type) {\n        case getFilterValue.type:\n            return ({...state,filter: payload})\n        case addContact.type:\n            return ({...state,contacts: [...state.contacts,payload]})\n        case deleteItem.type:\n            return ({...state, contacts:[...state.contacts.filter((contact) => contact.id!== payload)]})\n        default:\n            return state;\n    }\n}\nexport default contactReducer;","import {createStore} from 'redux';\nimport {configureStore, getDefaultMiddleware} from '@reduxjs/toolkit';\nimport contactReducer from './contactReducer'\nimport {devToolsEnhancer} from \"redux-devtools-extension\";\nimport {persistStore, persistReducer} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, contactReducer)\n\n// export const store = createStore(persistedReducer, devToolsEnhancer());\n\nexport const store = configureStore({\n    reducer: persistedReducer,\n\n        middleware: getDefaultMiddleware({\n    serializableCheck:false\n})\n}\n);\n\nexport const persistor = persistStore(store)\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {Provider} from 'react-redux';\n\nimport App from \"./App\";\n\nimport {store,persistor} from './components/redux/store'\n\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <App/>\n        </PersistGate>\n    </Provider>\n    , document.getElementById(\"root\"));\n\n"],"sourceRoot":""}